# script d'enregistrement sur le serveur

# récupération de hostname
hostnameMachine=$HOSTNAME

# récupération de username
usernameMachine=`whoami`

# récupération de ip
ipMachine=`hostname -I | sed -e 's/ //g'`

# récupération de port
portMachine=`cat /etc/ssh/sshd_config | grep "^Port" | cut -d' ' -f2`

# récupération de pathToSmph
MainPathMachine=$MainPath

# récupération de lastIdNum
lastIdNum=0

# modification de la variable hostname dans host.conf
sed -i -e "s/export hostname=.*/export hostname=\"$hostnameMachine\"/g" $MainPath/host.conf

if [ $hostnameMachine != $hostname ]
then
	echo -e "\033[7;33mLes clés RSA doivent être régénérées\033[0m"
	export hostname=$hostnameMachine
	export RSA_KEY="$RSA_KEY_Path/RSA_KEY_$hostname"
	rm $RSA_KEY_Path/*
	$ShRes/RSA_link
fi

echo "envois d'une requête d'enregistrement"
touch $transfertRequest/$hostname.req
echo "$hostnameMachine|$usernameMachine|$ipMachine|$portMachine|$MainPathMachine|$lastIdNum" > $transfertRequest/$hostname.req
touch $Data/register.smph
echo "transfer attempt" > $Data/register.smph
scp -P$port -i $RSA_KEY $transfertRequest/$hostname.req $username@$ip:$dest_transfertRequest && echo "transfered" > $Data/register.smph
ssh -p$port -i $RSA_KEY $username@$ip "echo new_request > $dest_transfertRequest/$hostname.req.smph"

status=''
while [[ $status != "finished" ]]
do
	echo "verif semaphore"
	status=`cat $Data/register.smph | cut -d'|' -f1`
	if [ $status == "request_rejected" ]
	then
		#case == CaseAlreadyExist forcément
		echo "Message du serveur : `cat $Data/register.smph | cut -d'|' -f2`"
		echo "Une machine avec le même nom est déja enregistrée"
		echo "s'agit t'il de la même machine ? (y/n) : "
		answer=''
		while [[ $answer != 'y' && $answer != 'n' ]]
		do
			read answer
			if [[ $answer != 'y' && $answer != 'n' ]]
			then
				echo 'Veuillez répondre par "y" pour "oui" ou "n" pour "non" :  '
			fi
		done

		if [ $answer == "y" ]
		then
			# Mise à jour de l'hote avec force_request
			echo "Mise à jour de l'hote sur le serveur distant"
			touch $Data/register.smph
			echo "transfer attempt" > $Data/register.smph
			scp -P$port -i $RSA_KEY $transfertRequest/$hostname.req $username@$ip:$dest_transfertRequest && echo "transfered" > $Data/register.smph
			ssh -p$port -i $RSA_KEY $username@$ip "echo force_request > $dest_transfertRequest/$hostname.req.smph"
		else
			# Nouveau nom pour la machine
			echo "Veuillez saisir un nouveau nom pour votre machine : "
			answer=''
			while [[ $answer == '' ]]
			do
				read answer
				if [[ $answer == '' ]]
				then
					echo 'Veuillez saisir un nom de machine non vide : '
				fi
			done

			hostnameMachine=$answer
			# modification de la variable hostname dans host.conf
			sed -i -e "s/export hostname=.*/export hostname=\"$hostnameMachine\"/g" $MainPath/host.conf

			echo "envois d'une nouvelle requête d'enregistrement"
			touch $transfertRequest/$hostname.req
			echo "$hostnameMachine|$usernameMachine|$ipMachine|$portMachine|$MainPathMachine|$lastIdNum" > $transfertRequest/$hostname.req
			touch $Data/register.smph
			echo "transfer attempt" > $Data/register.smph
			scp -P$port -i $RSA_KEY $transfertRequest/$hostname.req $username@$ip:$dest_transfertRequest && echo "transfered" > $Data/register.smph
			ssh -p$port -i $RSA_KEY $username@$ip "echo new_request > $dest_transfertRequest/$hostname.req.smph"

		fi
	else
		if [ $status == "request_validated" ]
		then
			echo "Message du serveur : `cat $Data/register.smph | cut -d'|' -f2`"
			Case=`cat $Data/register.smph | cut -d'|' -f3`
			case $Case in
				"CaseCreated")
					echo "L'hote a bien été enregistré"
					;;
				"CaseAlreadyRegistered")
					echo "L'hote était déjà enregistré"
					;;
				"CaseUpdated")
					echo "L'hote a bien été mis à jour"
					;;
			esac
		echo "finished" > $Data/register.smph
		fi
	fi
	sleep 1
done
